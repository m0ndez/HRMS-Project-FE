import React from "react";
import {
  GridPrintExportOptions,
  GridCsvExportOptions,
  GridToolbarContainer,
  GridCsvGetRowsToExportParams,
  useGridApiContext,
  gridFilteredSortedRowIdsSelector,
  gridRowTreeSelector,
  GridFilterPanel,
  GridToolbarFilterButton,
  GridToolbarColumnsButton,
} from "@mui/x-data-grid";
import { ButtonProps, createSvgIcon, Button, Stack } from "@mui/material";
import LocalPrintshopRoundedIcon from "@mui/icons-material/LocalPrintshopRounded";
const constants = {
  exportExcelBtn: "ดาวน์โหลดเอกสาร",
  printBtn: "พิมพ์เอกสาร",
};

export default (() => {
  const apiRef = useGridApiContext();

  const getRowsWithGroups = ({ apiRef }: GridCsvGetRowsToExportParams) =>
    gridFilteredSortedRowIdsSelector(apiRef);

  const getRowsWithoutGroups = ({ apiRef }: GridCsvGetRowsToExportParams) => {
    const rows = gridFilteredSortedRowIdsSelector(apiRef);
    const tree = gridRowTreeSelector(apiRef);

    return rows.filter((rowId) => !tree[rowId].isAutoGenerated);
  };

  const ExportIcon = createSvgIcon(
    <path d="M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z" />,
    "SaveAlt"
  );

  const buttonBaseProps: ButtonProps = {
    color: "primary",
    size: "small",
    variant: "outlined",
  };

  const csvOptions: GridCsvExportOptions = {
    utf8WithBom: true,
    fileName: document.title,
    includeHeaders: true,
  };
  const printOptions: GridPrintExportOptions = {
    hideToolbar: true,
    hideFooter: false,
    copyStyles: true,
    fileName: document.title,
  };

  const handleExportCSV = (options: GridCsvExportOptions) => {
    apiRef.current.exportDataAsCsv(options);
  };

  const handleExportPrint = (options: GridPrintExportOptions) => {
    apiRef.current.exportDataAsPrint(options);
  };

  return (
    <GridToolbarContainer sx={{ justifyContent: "flex-end", m: 1 }}>
      {/* <GridFilterPanel/> */}
      {/* <GridToolbarFilterButton   /> */}
      <Stack direction={"row"} spacing={1}>
        <GridToolbarColumnsButton {...buttonBaseProps} />
        <Button
          {...buttonBaseProps}
          startIcon={<LocalPrintshopRoundedIcon />}
          onClick={() =>
            handleExportPrint({
              ...printOptions,
            })
          }
        >
          {constants.printBtn}
        </Button>
        <Button
          {...buttonBaseProps}
          startIcon={<ExportIcon />}
          onClick={() =>
            handleExportCSV({
              ...csvOptions,
              getRowsToExport: getRowsWithoutGroups,
            })
          }
        >
          {constants.exportExcelBtn}
        </Button>
      </Stack>
    </GridToolbarContainer>
  );
}) as React.FunctionComponent;
